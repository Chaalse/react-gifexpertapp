{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAIlB,SACI,uBACIO,KAAM,OACNC,MAAUT,EACVU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGjC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAQf,EAAMgB,IAAON,IAC1B,4BAAIA,QCHHO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAUjB,ECVoB,SAAEA,GAE9B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGR,CAAEpB,IAGEqB,EDZgCM,CAAc3B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGxB,OACI,qCACA,6BAAMpB,IAEFoB,GAAW,wCAEf,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEQpBiB,EA/Ba,WAGxB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAKA,OACI,qCACA,8CACA,kDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQS,EAAWe,KAAI,SAAAT,GAAS,OACpB,cAAC,EAAD,CAEAA,UAAcA,GADPA,Y,YChB3B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e5056a76.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( { setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategorias( categorias => [inputValue, ...categorias] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n            <input\r\n                type= \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange}\r\n                />\r\n        </form>\r\n    );\r\n   \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async( categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=BlQpUjHIOQWNpYbAQ7D05Nck2V3q8rYH`;\r\n    \r\n    const resp = await fetch ( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react';\r\nexport const GifGridItem = ( {title, url} ) =>  {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce \" >\r\n            <img src = { url } alt= { title} />\r\n            <p>{title }</p>\r\n        </div>\r\n\r\n    )\r\n        \r\n\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    //Código obsoleto. Primera aproximación haciendo el componente\r\n    // const [images, setImages] = useState([]);\r\n    // useEffect(() => {\r\n        \r\n        //     getGifs( categoria )\r\n        //     .then( imgs => setImages( imgs))\r\n        \r\n        // }, [ categoria])\r\n        \r\n        const {data:images, loading} = useFetchGifs( categoria);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3>{ categoria}</h3>\r\n\r\n        {   loading && <p>Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    \r\nconst [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n});\r\n\r\nuseEffect(() => {\r\n\r\n    getGifs( categoria )\r\n    .then( imgs => {\r\n        setTimeout(()=> {\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n        }, 3000);        \r\n    });\r\n\r\n}, [ categoria ])\r\n\r\n\r\nreturn state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias =['Star Wars', 'Samurai Jack', 'Vengadores'];\r\n    const [categorias, setCategorias] = useState(['Star Wars']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategorias( categorias => [...categorias, 'LOTR']);\r\n    // }\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <h3 >#BeFrikiMyFriend</h3>\r\n        <AddCategory setCategorias = { setCategorias}/>\r\n        <hr/>\r\n        <ol>\r\n            {\r\n                categorias.map(categoria => (\r\n                    <GifGrid \r\n                    key = {categoria}\r\n                    categoria = { categoria}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr />\n"],"sourceRoot":""}